// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                 String    @id @default(cuid())
  userId             String
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])

  @@index([userId], map: "session_Fkey")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  password      String?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

// // model Account {
// //   id                String  @id @default(cuid())
// //   userId            String
// //   type              String
// //   provider          String
// //   providerAccountId String
// //   refresh_token     String?
// //   access_token      String?
// //   expires_at        Int?
// //   token_type        String?
// //   scope             String?
// //   id_token          String?
// //   session_state     String?

// //   user User @relation(fields: [userId], references: [id], onDelete: Cascade)

// //   @@unique([provider, providerAccountId])
// //   @@index([userId])
// // }

// // model Session {
// //   id           String   @id @default(cuid())
// //   sessionToken String   @unique
// //   userId       String
// //   expires      DateTime
// //   user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

// //   @@index([userId])
// // }

// model User {
//   id        String              @id @default(cuid())
//   username  String?             @unique
//   email     String              @unique
//   // emailVerified DateTime?
//   image     String?
//   password  String?
//   createdAt DateTime            @default(now())
//   token     AuthToken[]
//   // accounts      Account[]
//   // sessions      Session[]
// }

// model AuthToken {
//   id        String   @id @default(cuid())
//   token     String   @unique
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   userId    String
//   user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

//   @@index([userId], map: "authToken_UserId_Fkey")
// }

model Facilities {
  Fac_Id    String @id @default(cuid())
  Fac_Slug  String @unique
  Fac_Desc  String
  Fac_Title String
  Fac_Image String
}
