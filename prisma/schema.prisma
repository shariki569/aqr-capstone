// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                 String    @id @default(cuid())
  userId             String
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])

  @@index([userId], map: "session_Fkey")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  password      String?
  image         String?   @db.VarChar(355)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
  post          Post[]
  comment       Comment[]
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

model Category {
  CatId    String  @id @default(cuid())
  CatSlug  String  @unique
  CatTitle String
  CatImg   String?
  posts    Post[]
}

model Post {
  PostId    String    @id @default(cuid())
  PostSlug  String    @unique
  CreatedAt DateTime  @default(now())
  PostTitle String    @db.VarChar(455)
  PostDesc  String    @db.Text
  PostImg   String?
  Views     Int       @default(0)
  catSlug   String
  userEmail String
  postCat   Category  @relation(fields: [catSlug], references: [CatSlug])
  user      User      @relation(fields: [userEmail], references: [email])
  comments  Comment[]

  @@index([catSlug])
  @@index([userEmail])
}

model Comment {
  CommentId   String   @id @default(cuid())
  CreatedAt   DateTime @default(now())
  CommentDesc String
  userEmail   String
  user        User     @relation(fields: [userEmail], references: [email])
  postSlug    String
  post        Post     @relation(fields: [postSlug], references: [PostSlug])

  @@index([userEmail])
  @@index([postSlug])
}

model Contact {
  Contact_Id         Int    @id @default(autoincrement())
  Contact_Address   String @db.VarChar(255)
  Contact_Email     String @db.VarChar(144)
  Contact_Telphone  String
  Contact_Cellphone String
}

// model Facilities {
//   Fac_Id        String     @id @default(cuid())
//   Fac_Slug      String     @unique
//   Fac_Desc      String
//   Fac_Title     String
//   Fac_Date      DateTime   @default(now())
//   Images FacilityImages[]
// }

// model FacilityImages {
//   FacImg_Id   Int        @id
//   fac_id      String
//   FacImg_Name String
//   Is_Featured Boolean  
//   facility    Facilities @relation(fields: [fac_id], references: [Fac_Id])

//   @@index([fac_id] map: "fac_img_FKey")
// }
